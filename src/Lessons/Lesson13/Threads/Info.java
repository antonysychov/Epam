package Lessons.Lesson13.Threads;

public class Info {
    //процесс состоит из потоков, сам процесс только захватывает ресурсы
    //процесс/поток работает только со своей выеленной памятью
    //симметричная мультипроцессорная архитектура (в лептопах) - когда процесоров несколько, сидят на одной шине, обмениваються инфой через память
    //есть также кластерная архитектура, где память своя у каждого процессора
    //volatile говорит компилятору и JVM не делать оптимизацию и не заменять поле константами
    //оптимизация может занести неизменяемые переменные из кучи в стек метода main, работа со стеком - быстрее
    //необходимо следить чтобы потоки выполняли равносильные задачи
    //реилизовывать Runnable приоритетнее, т.к. при этом не исключаеться возморжность наследоваться от других классов
    //synchronized методы имеет смысл когда к одному объекту синхронизирован доступ
    //static synchronized () блокирует объект класса Class
    //wait() лучше помещать в while(условие) цикл, где условием являеться проверка, дейтвительно ли произошло нужное событие

    //дз разбить суммирование ряда чисел на n потоков
    //задача о скрипачах (философах) 5 скрипок, 5 смычков, 10 скрипачей ... очередь скрипачей, скрипок, смычков
}
